Функция БезопасноПодключить(Знач Путь)

	Попытка
		
		ПодключитьМодуль(Путь);
		
	Исключение
	
		Возврат Ложь;
	
	КонецПопытки;
	
	Сообщить("Подключен ", Путь);
	Возврат Истина;

КонецФункции


Подключено = Ложь;

Для ( [
	"../bin/Debug/libe8-sqlite.dll",
	"../bin/Debug/libe8-sqlite.so",
	"../bin/Release/libe8-sqlite.dll",
	"../bin/Release/libe8-sqlite.so"
	] )
	Подключено = Подключено Или БезопасноПодключить(.);
	
Заявить Подключено;


Ём = Sqlite.Подключить("./base.sqlite");
Ём.СоздатьЗапрос("CREATE TABLE IF NOT EXISTS test1 (id int, text varchar(20), CONSTRAINT PK_ID PRIMARY KEY (id) ON CONFLICT REPLACE)").Выполнить();
Ём.СоздатьЗапрос("INSERT INTO test1 VALUES (1, 'Строка 1') ").Выполнить();
Ём.СоздатьЗапрос("INSERT INTO test1 VALUES (2, 'Строка 2') ").Выполнить();
Ём.СоздатьЗапрос("INSERT INTO test1 VALUES (3, 'Строка 3') ").Выполнить();
Ём.СоздатьЗапрос("INSERT INTO test1 VALUES (4, 'Строка 4') ").Выполнить();
Ём.СоздатьЗапрос("INSERT INTO test1 VALUES (5, 'Строка 5') ").Выполнить();

Запрос = Ём.СоздатьЗапрос();
Запрос.УстановитьТекстЗапроса("SELECT id, text FROM test1 WHERE text <> ?1 AND id >= ?2 ORDER BY id DESC");
Запрос.УстановитьПараметр(1, "Строка 4");
Запрос.УстановитьПараметр(2, 1.3);
Выборка = Запрос.Выполнить();
Пока Выборка.Следующий() Цикл

	Поле1 = Выборка.ПолучитьЗначение(0);
	Поле2 = Выборка.ПолучитьЗначение(1);
	
	Сообщить("ид: ", Поле1, Символы.Таб, "т: ", Поле2);

КонецЦикла;
